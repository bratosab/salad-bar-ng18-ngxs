var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.871,1,1.399]],["body/components/AppComponent.html",[0,1.243,1,2.177,2,1.898,3,0.309,4,0.267,5,1.483,6,1.483,7,1.483,8,0.267,9,2.186,10,1.483,11,2.46,12,3.024,13,3.111,14,2.11,15,2.21,16,2.365,17,4.376,18,4.376,19,4.376,20,4.376,21,4.376,22,2.753,23,2.11,24,3.759,25,2.11,26,3.759,27,0.226,28,0.641,29,4.376,30,1.557,31,3.404,32,0.716,33,2.641,34,1.094,35,0.036,36,1.886,37,0.267,38,0.825,39,0.682,40,0.618,41,1.635,42,4.768,43,2.641,44,0.702,45,0.825,46,2.641,47,2.186,48,2.641,49,1.662,50,1.483,51,0.309,52,0.015,53,2.641,54,1.886,55,0.995,56,3.759,57,3.111,58,1.483,59,2.11,60,2.11,61,1.483,62,2.676,63,1.483,64,0.504,65,1.483,66,1.206,67,1.483,68,1.206,69,1.483,70,1.206,71,1.483,72,1.206,73,0.682,74,1.483,75,1.483,76,0.022,77,0.022]],["title/classes/ChooseTopping.html",[52,0.017,78,0.957]],["body/classes/ChooseTopping.html",[3,0.338,4,0.291,8,0.291,27,0.247,28,0.682,32,0.874,35,0.037,37,0.577,39,0.744,40,0.675,41,0.989,44,0.536,51,0.631,52,0.03,64,0.386,73,1.39,76,0.023,77,0.023,78,1.248,79,0.989,80,1.316,81,2.018,82,1.522,83,1.894,84,2.288,85,1.086,86,2.883,87,3.997,88,0.819,89,0.819,90,2.883,91,2.521,92,2.244,93,2.244,94,1.456,95,0.989,96,0.9,97,0.989,98,2.156,99,1.901,100,1.618,101,1.618,102,1.825,103,1.574]],["title/classes/Error.html",[52,0.017,103,1.051]],["body/classes/Error.html",[3,0.337,4,0.29,8,0.29,27,0.246,28,0.68,32,0.872,35,0.037,37,0.577,39,0.742,40,0.673,41,0.986,44,0.535,51,0.63,52,0.03,64,0.385,73,1.424,76,0.023,77,0.023,78,0.898,79,0.986,80,1.312,81,2.014,82,1.342,83,1.893,84,2.286,85,1.083,88,0.817,89,0.817,91,2.519,92,1.613,93,2.918,94,1.451,95,0.986,96,0.898,97,0.986,98,2.229,99,1.898,100,1.613,101,1.613,102,1.821,103,1.929,104,2.874,105,3.989,106,2.874]],["title/classes/Fetch.html",[52,0.017,98,1.27]],["body/classes/Fetch.html",[3,0.359,4,0.31,8,0.31,27,0.263,28,0.711,32,0.583,35,0.037,37,0.567,39,0.791,40,0.717,41,1.051,44,0.558,51,0.642,52,0.03,73,1.449,76,0.024,77,0.024,78,0.957,79,1.051,80,1.399,82,1.373,83,1.925,84,2.326,91,2.563,92,1.72,93,2.339,94,1.547,95,1.051,96,0.957,97,1.051,98,2.326,99,1.963,100,1.72,101,2.339,102,1.903,103,1.625,107,3.064]],["title/classes/FetchToppings.html",[52,0.017,97,1.051]],["body/classes/FetchToppings.html",[3,0.36,4,0.311,8,0.311,27,0.263,28,0.712,32,0.585,35,0.037,37,0.568,39,0.793,40,0.719,41,1.054,44,0.56,51,0.643,52,0.03,73,1.45,76,0.025,77,0.025,78,0.96,79,1.054,80,1.403,82,1.374,83,1.927,84,2.327,91,2.565,92,1.725,93,2.344,94,1.552,95,1.054,96,0.96,97,1.433,98,2.275,99,1.966,100,1.725,101,1.725,102,1.907,103,1.627,108,3.073]],["title/components/KitchenComponent.html",[0,0.871,66,1.399]],["body/components/KitchenComponent.html",[0,1.417,1,1.549,2,2.253,3,0.397,4,0.343,5,1.905,6,1.905,7,1.905,8,0.343,10,1.905,11,2.63,12,3.233,14,2.505,15,2.253,23,2.505,25,2.505,35,0.036,44,0.455,45,1.06,51,0.397,52,0.019,57,4.384,58,1.905,59,2.505,60,2.505,61,1.905,62,2.974,63,1.905,64,0.598,65,1.905,66,2.419,67,1.905,68,1.549,69,1.905,70,1.549,71,1.905,72,1.549,73,0.876,74,1.905,75,1.905,76,0.026,77,0.026,109,2.808,110,4.463,111,4.463,112,4.463]],["title/components/OrderComponent.html",[0,0.871,68,1.399]],["body/components/OrderComponent.html",[0,1,1,0.837,2,1.445,3,0.215,4,0.185,5,1.029,6,1.029,7,1.029,8,0.185,10,1.029,11,2.18,12,2.68,14,1.606,15,1.445,16,1.8,22,2.214,23,1.606,25,1.606,27,0.157,28,0.488,30,1.186,32,0.909,34,1.186,35,0.037,37,0.185,39,0.909,40,0.824,44,0.696,45,0.573,47,1.517,49,1.153,50,1.029,51,0.215,52,0.01,55,0.691,58,1.029,59,1.606,60,1.606,61,1.029,62,2.232,63,1.029,64,0.68,65,1.029,66,0.837,67,1.029,68,1.816,69,1.029,70,0.837,71,1.029,72,0.837,73,0.473,74,1.029,75,1.029,76,0.017,77,0.017,85,0.691,113,1.517,114,2.043,115,2.913,116,1.648,117,3.52,118,3.52,119,3.52,120,3.52,121,3.52,122,3.52,123,2.862,124,2.862,125,4.446,126,3.977,127,3.52,128,3.782,129,2.502,130,3.291,131,3.977,132,2.862,133,3.52,134,1.833,135,1.777,136,1.833,137,2.862,138,1.833,139,3.52,140,1.833,141,2.368,142,1.833,143,2.043,144,1.833,145,1.833,146,1.833,147,1.517,148,2.862,149,1.833,150,1.517,151,1.458,152,1.153,153,1.833,154,1.833,155,1.833,156,0.76,157,0.76,158,0.76,159,1.833,160,1.833,161,1.833,162,2.862,163,1.607,164,1.833,165,1.833,166,1.833,167,1.833,168,1.833,169,1.833,170,1.833,171,2.368,172,1.833,173,1.833,174,1.833,175,4.571,176,4.571,177,3.977,178,2.839,179,2.862,180,2.862]],["title/injectables/OrderState.html",[181,1.155,182,1.928]],["body/injectables/OrderState.html",[3,0.305,4,0.263,8,0.263,27,0.223,30,1.543,32,0.827,34,1.8,35,0.037,37,0.439,38,1.163,44,0.635,45,0.814,51,0.436,52,0.015,64,0.719,76,0.022,77,0.022,88,1.234,89,1.234,96,0.814,116,1.08,135,2.193,156,1.08,157,2.16,158,2.16,163,1.983,181,1.403,182,2.342,183,1.639,184,1.861,185,2.38,186,3.081,187,3.564,188,3.564,189,3.595,190,3.081,191,2.606,192,4.344,193,3.081,194,3.081,195,2.606,196,3.081,197,3.081,198,2.606,199,2.531,200,1.463,201,2.164,202,2.157,203,0.982,204,1.19,205,2.342,206,1.639,207,2.157,208,2.157,209,2.157,210,3.081,211,2.157,212,2.157,213,2.157,214,2.157]],["title/interfaces/OrderStateModel.html",[203,1.155,204,1.399]],["body/interfaces/OrderStateModel.html",[3,0.346,4,0.298,8,0.298,27,0.253,28,0.693,35,0.037,37,0.469,38,1.694,44,0.671,45,0.922,51,0.476,52,0.017,64,0.745,76,0.024,77,0.024,96,0.922,116,1.223,156,1.223,157,1.684,158,1.684,163,2.477,181,1.531,182,1.857,184,2.108,185,1.856,186,2.443,187,3.149,188,3.149,190,2.443,193,2.443,194,2.443,196,2.443,197,2.443,199,2.936,200,1.657,201,2.286,202,2.443,203,1.113,204,1.856,205,3.149,206,1.857,207,2.443,208,2.443,209,2.443,210,3.363,211,2.443,212,2.443,213,2.443,214,2.443,215,1.857]],["title/components/SaladComponent.html",[0,0.871,70,1.399]],["body/components/SaladComponent.html",[0,0.955,1,0.78,2,1.367,3,0.2,4,0.173,5,0.959,6,0.959,7,0.959,8,0.173,10,0.959,11,2.122,12,2.609,14,1.52,15,1.698,16,1.703,22,2.115,23,1.52,25,1.52,27,0.146,28,0.462,30,1.122,31,2.731,32,0.918,34,1.393,35,0.037,36,1.22,37,0.173,39,1.076,40,0.976,41,0.929,44,0.695,45,0.534,49,1.075,50,0.959,51,0.2,52,0.01,54,1.22,55,0.644,58,0.959,59,1.52,60,1.52,61,0.959,62,2.147,63,0.959,64,0.646,65,0.959,66,0.78,67,0.959,68,0.78,69,0.959,70,2.025,71,0.959,72,1.747,73,1.2,74,0.959,75,0.959,76,0.016,77,0.016,78,1.05,82,1.076,88,0.485,89,0.485,95,0.586,97,0.586,103,0.586,114,1.933,115,2.782,125,3.671,129,2.406,130,3.165,135,1.367,143,1.933,147,1.414,151,1.122,152,1.075,156,0.708,171,2.782,201,1.747,204,0.78,216,1.414,217,2.24,218,2.24,219,3.362,220,3.362,221,2.707,222,2.707,223,3.825,224,4.169,225,3.362,226,1.708,227,1.414,228,1.708,229,1.708,230,2.707,231,1.708,232,2.707,233,2.707,234,1.708,235,1.708,236,2.707,237,2.707,238,1.708,239,2.707,240,1.708,241,1.414,242,1.414,243,1.414,244,1.708,245,1.414,246,1.708,247,0.863,248,0.959,249,1.708,250,1.414,251,1.708,252,1.708,253,1.708,254,1.708,255,1.708,256,2.707,257,1.708,258,1.708,259,1.708,260,1.708,261,1.708,262,1.708,263,1.708,264,1.708,265,1.708,266,1.708,267,1.708,268,2.707,269,1.933,270,2.24,271,2.707]],["title/injectables/SaladService.html",[151,1.27,181,1.155]],["body/injectables/SaladService.html",[3,0.383,4,0.33,8,0.33,13,2.705,27,0.28,28,0.742,30,1.804,32,0.994,34,1.804,35,0.037,37,0.495,38,1.63,44,0.656,45,1.021,51,0.383,52,0.019,55,1.232,64,0.699,73,1.347,76,0.026,77,0.026,82,0.844,85,1.64,88,0.929,89,0.929,94,1.65,95,1.121,98,1.804,151,1.804,163,2.235,181,1.64,183,2.056,272,2.705,273,5.22,274,3.269,275,5.22,276,4.353,277,4.353,278,3.269,279,4.353,280,4.353,281,3.269,282,3.269,283,2.334,284,3.269,285,3.269]],["title/injectables/SaladState.html",[181,1.155,247,1.547]],["body/injectables/SaladState.html",[3,0.222,4,0.191,8,0.191,11,1.641,27,0.162,30,1.216,32,0.92,34,1.919,35,0.037,37,0.488,38,0.591,41,0.65,44,0.621,45,0.591,51,0.344,52,0.011,55,1.65,64,0.669,73,1.13,76,0.017,77,0.017,78,1.447,82,1.045,83,1.232,85,0.714,88,1.373,89,1.373,95,0.65,96,0.591,97,1.232,103,1.232,135,1.814,151,1.919,152,1.191,156,0.785,181,1.106,183,1.191,187,3.557,188,3.295,189,3.833,201,1.848,203,0.714,205,1.846,206,1.191,247,1.482,248,2.272,269,1.352,283,1.352,286,1.352,287,2.935,288,2.973,289,2.973,290,2.935,291,1.894,292,1.894,293,2.429,294,2.429,295,1.894,296,3.998,297,2.429,298,2.429,299,1.894,300,2.429,301,2.429,302,1.894,303,1.894,304,2.973,305,2.429,306,1.894,307,1.894,308,2.973,309,2.429,310,1.894,311,2.429,312,1.894,313,1.567,314,1.567,315,1.567,316,1.352,317,2.973,318,1.567,319,1.352,320,1.352,321,1.567,322,3.349,323,1.567,324,1.567,325,2.429,326,2.429,327,2.429,328,1.567,329,1.567,330,1.567,331,1.567,332,1.567,333,1.567,334,1.567]],["title/interfaces/SaladStateModel.html",[203,1.155,248,1.72]],["body/interfaces/SaladStateModel.html",[3,0.283,4,0.244,8,0.244,11,1.611,27,0.207,28,0.602,35,0.037,37,0.421,38,1.301,41,0.83,44,0.681,45,0.755,51,0.413,52,0.014,55,1.834,64,0.324,73,1.388,76,0.021,77,0.021,78,1.102,82,1.388,83,0.83,95,0.83,96,0.755,97,0.83,103,1.743,151,1.726,152,1.522,156,1.002,181,1.329,187,3.197,188,2.88,201,1.902,203,0.911,205,2.88,206,1.522,215,1.522,247,1.221,248,2.338,269,1.727,283,1.727,286,1.727,288,2.002,289,2.002,293,2.002,294,2.002,296,2.92,297,2.002,298,2.002,300,2.002,301,2.002,304,2.002,305,2.002,308,2.002,309,2.002,311,2.002,313,2.002,314,2.002,315,2.002,316,1.727,317,4.205,318,2.002,319,1.727,320,1.727,321,2.002,322,3.788,323,2.002,324,2.002,325,2.92,326,2.92,327,2.92,328,2.002,329,2.002,330,2.002,331,2.002,332,2.002,333,2.002,334,2.002]],["title/classes/SaladStore.html",[52,0.017,335,2.188]],["body/classes/SaladStore.html",[3,0.444,4,0.383,8,0.383,27,0.325,30,1.985,32,0.721,34,1.57,35,0.037,37,0.484,44,0.642,51,0.444,52,0.021,55,1.427,64,0.508,76,0.028,77,0.028,79,1.299,88,1.076,89,1.076,116,1.57,129,3.306,135,1.913,156,1.57,201,2.188,204,2.188,245,3.135,335,3.42,336,3.135,337,4.791,338,4.791,339,4.791,340,3.788,341,3.788,342,3.788,343,3.788,344,3.788]],["title/classes/SetName.html",[52,0.017,157,1.27]],["body/classes/SetName.html",[3,0.38,4,0.328,8,0.328,27,0.278,28,0.739,32,0.929,35,0.036,37,0.585,38,1.742,39,0.838,40,0.76,44,0.435,51,0.571,52,0.028,64,0.763,76,0.025,77,0.025,79,1.114,81,2.188,83,1.86,84,2.247,85,1.223,88,0.923,89,0.923,99,2.021,116,2.157,157,1.796,158,1.345,163,1.979,185,1.483,199,2.628,200,1.823,345,2.043,346,3.247,347,4.334,348,3.247,349,3.716]],["title/classes/SetStatus.html",[52,0.017,185,1.399]],["body/classes/SetStatus.html",[3,0.38,4,0.328,8,0.328,27,0.278,28,0.739,32,0.929,35,0.036,37,0.585,38,1.524,39,0.838,40,0.76,44,0.435,51,0.571,52,0.028,64,0.654,76,0.025,77,0.025,79,1.114,81,2.188,83,1.86,84,2.247,85,1.223,88,0.923,89,0.923,99,2.021,116,2.157,157,1.345,158,1.345,163,1.979,185,1.979,199,3.014,200,1.823,345,2.043,349,3.716,350,3.247,351,4.334,352,3.247]],["title/classes/SetTel.html",[52,0.017,158,1.27]],["body/classes/SetTel.html",[3,0.38,4,0.328,8,0.328,27,0.278,28,0.739,32,0.929,35,0.036,37,0.585,38,1.742,39,0.838,40,0.76,44,0.435,51,0.571,52,0.028,64,0.654,76,0.025,77,0.025,79,1.114,81,2.188,83,1.86,84,2.247,85,1.223,88,0.923,89,0.923,99,2.021,116,2.157,157,1.345,158,1.796,163,2.548,185,1.483,199,2.628,200,1.823,345,2.043,349,3.716,353,3.247,354,4.334,355,3.247]],["title/classes/Success.html",[52,0.017,102,1.399]],["body/classes/Success.html",[3,0.337,4,0.29,8,0.29,27,0.246,28,0.68,32,0.872,35,0.037,37,0.577,39,0.742,40,0.673,41,0.986,44,0.535,51,0.63,52,0.03,64,0.385,73,1.493,76,0.023,77,0.023,78,0.898,79,0.986,80,1.312,81,2.014,82,1.452,83,1.893,84,2.286,85,1.083,88,0.817,89,0.817,91,2.519,92,1.613,93,2.239,94,1.451,95,0.986,96,0.898,97,0.986,98,2.229,99,1.898,100,1.613,101,1.613,102,2.26,103,1.571,356,2.874,357,3.989,358,2.874]],["title/interfaces/Topping.html",[82,0.791,203,1.155]],["body/interfaces/Topping.html",[3,0.473,4,0.408,8,0.408,27,0.346,28,0.85,35,0.035,37,0.547,38,1.689,51,0.473,64,0.757,76,0.029,77,0.029,82,1.287,178,4.22,203,1.522,215,2.541,270,4.675,359,3.342,360,5.65]],["title/components/ToppingsComponent.html",[0,0.871,72,1.399]],["body/components/ToppingsComponent.html",[0,1.129,1,1.019,2,1.678,3,0.261,4,0.225,5,1.252,6,1.252,7,1.252,8,0.225,10,1.252,11,2.335,12,2.87,14,1.866,15,2.006,16,2.091,22,2.499,23,1.866,25,1.866,27,0.191,30,1.377,31,3.143,32,0.896,34,1.646,35,0.037,36,1.593,37,0.445,39,0.576,40,0.522,44,0.59,45,0.697,50,1.252,51,0.261,52,0.013,54,1.593,55,1.253,58,1.252,59,1.866,60,1.866,61,1.252,62,2.471,63,1.252,64,0.59,65,1.252,66,1.019,67,1.252,68,1.019,69,1.252,70,1.019,71,1.252,72,2.01,73,1.274,74,1.252,75,1.252,76,0.02,77,0.02,78,1.038,82,1.274,88,0.945,89,0.945,95,0.765,96,0.697,135,1.127,178,2.836,217,2.751,218,2.751,227,1.846,241,1.846,242,3.643,243,1.846,319,2.373,361,1.846,362,3.973,363,3.973,364,3.973,365,3.324,366,3.324,367,3.324,368,3.324,369,3.324,370,3.973,371,2.231,372,3.973,373,2.231,374,3.324,375,2.231,376,2.231,377,2.231,378,3.324,379,3.973,380,2.231,381,2.231,382,3.324,383,3.324,384,1.404,385,2.231,386,2.231,387,2.231,388,2.231,389,3.324]],["title/coverage.html",[390,3.45]],["body/coverage.html",[0,1.455,1,1.261,8,0.279,9,2.285,35,0.036,37,0.279,52,0.032,66,1.261,68,1.261,70,1.261,72,1.261,76,0.023,77,0.023,78,0.862,80,2.425,82,0.713,91,1.261,97,0.947,98,1.144,102,1.261,103,0.947,109,2.285,113,2.285,151,1.144,157,1.144,158,1.144,181,1.689,182,1.737,184,2.769,185,1.261,203,1.689,204,1.261,216,2.285,247,1.394,248,1.55,272,2.285,286,2.769,320,4.392,335,1.971,336,2.285,345,2.82,359,2.285,361,2.285,384,1.737,390,2.285,391,2.761,392,2.761,393,2.761,394,2.761,395,2.285,396,4.862,397,2.285,398,5.122,399,2.285,400,2.285,401,2.285,402,2.285,403,5.736,404,2.761,405,2.761,406,2.761,407,2.761,408,4.483,409,2.761,410,2.761,411,2.761,412,2.761]],["title/dependencies.html",[413,1.832,414,3.047]],["body/dependencies.html",[35,0.037,45,1.197,49,2.411,50,2.151,76,0.028,77,0.028,150,3.172,156,1.588,316,2.736,414,3.172,415,3.833,416,5.992,417,3.833,418,3.994,419,3.833,420,3.833,421,4.826,422,4.826,423,3.833,424,3.833,425,4.826,426,5.283,427,3.833,428,3.833,429,3.833,430,3.833,431,3.833,432,3.833]],["title/miscellaneous/enumerations.html",[433,1.614,434,3.047]],["body/miscellaneous/enumerations.html",[27,0.372,35,0.035,40,1.355,76,0.031,77,0.031,199,2.632,384,3.279,433,2.733,434,3.595,435,4.344,436,4.344,437,5.213,438,4.344,439,4.344,440,4.344,441,5.213]],["title/index.html",[27,0.22,442,2.566,443,2.566]],["body/index.html",[0,1.382,4,0.326,35,0.025,64,0.432,76,0.025,77,0.025,114,2.303,384,2.029,413,2.303,418,2.669,444,3.225,445,4.315,446,3.225,447,4.862,448,4.862,449,2.669,450,3.225,451,4.315,452,5.412,453,5.687,454,3.225,455,3.225,456,3.225,457,3.225,458,3.225,459,3.225,460,3.225,461,3.225,462,3.225,463,3.225,464,3.225,465,4.862,466,4.862,467,3.225,468,5.192,469,3.225,470,3.225,471,3.225,472,3.225,473,4.315,474,4.315,475,5.192,476,3.225,477,4.315,478,4.315,479,3.225,480,5.569,481,3.225,482,3.225,483,3.225,484,4.315,485,3.225,486,3.225,487,3.225,488,3.225,489,3.225,490,3.225,491,4.862,492,3.225,493,3.225,494,3.225,495,3.225,496,2.303,497,3.225,498,3.225]],["title/modules.html",[499,3.45]],["body/modules.html",[35,0.033,76,0.033,77,0.033,499,4.004]],["title/overview.html",[496,2.976]],["body/overview.html",[2,2.35,35,0.032,76,0.032,77,0.032,79,1.596,183,2.928,215,2.928,496,3.323,500,4.654,501,5.43,502,4.654]],["title/properties.html",[28,0.628,413,1.832]],["body/properties.html",[28,0.813,35,0.034,76,0.032,77,0.032,449,3.945,503,4.768]],["title/miscellaneous/variables.html",[433,1.614,504,3.047]],["body/miscellaneous/variables.html",[15,1.645,27,0.279,35,0.037,37,0.527,38,1.017,39,1.346,40,1.22,41,1.117,55,1.841,76,0.026,77,0.026,80,1.487,91,1.983,96,1.628,116,1.35,128,2.696,129,2.049,141,2.696,143,2.326,151,1.35,201,1.983,204,1.487,247,1.645,250,2.696,395,2.696,397,3.595,399,2.696,400,3.595,401,2.696,402,3.595,433,2.049,504,2.696,505,3.258,506,3.258,507,3.258,508,3.258,509,3.258,510,3.258,511,3.258,512,3.258,513,3.258,514,3.258,515,3.258,516,3.258,517,3.258,518,4.344,519,3.258,520,3.258,521,3.258,522,3.258,523,3.258,524,3.258,525,3.258]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":320,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"coverage.html":{}}}],["0.0.0",{"_index":503,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["18.1.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["18.2.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["18.2.8",{"_index":418,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2.3.0",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":501,"title":{},"body":{"overview.html":{}}}],["5",{"_index":500,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":502,"title":{},"body":{"overview.html":{}}}],["_index",{"_index":381,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["accessors",{"_index":132,"title":{},"body":{"components/OrderComponent.html":{}}}],["action",{"_index":188,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action(choosetopping",{"_index":294,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action(fetchtoppings",{"_index":298,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action(setname",{"_index":190,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["action(setstatus",{"_index":194,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["action(settel",{"_index":197,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["action(toppings.error",{"_index":305,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action(toppings.fetch",{"_index":301,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action(toppings.success",{"_index":309,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action.error.message",{"_index":334,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action.name",{"_index":209,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["action.status",{"_index":214,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["action.tel",{"_index":211,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["action.topping",{"_index":324,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action.toppings",{"_index":333,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["action_scope",{"_index":91,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":223,"title":{},"body":{"components/SaladComponent.html":{}}}],["actual_component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["add",{"_index":487,"title":{},"body":{"index.html":{}}}],["angular",{"_index":447,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"injectables/SaladService.html":{},"classes/Success.html":{}}}],["angular/compiler",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"components/ToppingsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":150,"title":{},"body":{"components/OrderComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{}}}],["angular/material/form",{"_index":153,"title":{},"body":{"components/OrderComponent.html":{}}}],["angular/material/icon",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/input",{"_index":155,"title":{},"body":{"components/OrderComponent.html":{}}}],["angular/material/list",{"_index":243,"title":{},"body":{"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["angular/material/toolbar",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"dependencies.html":{}}}],["api",{"_index":279,"title":{},"body":{"injectables/SaladService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":458,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":469,"title":{},"body":{"index.html":{}}}],["asyncpipe",{"_index":219,"title":{},"body":{"components/SaladComponent.html":{}}}],["automatically",{"_index":459,"title":{},"body":{"index.html":{}}}],["bar",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["browser",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":468,"title":{},"body":{"index.html":{}}}],["callback",{"_index":342,"title":{},"body":{"classes/SaladStore.html":{}}}],["canactivatefn",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":489,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":314,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["catcherror((err",{"_index":329,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["change",{"_index":461,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":217,"title":{},"body":{"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["changedetectionstrategy",{"_index":241,"title":{},"body":{"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":218,"title":{},"body":{"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["check",{"_index":494,"title":{},"body":{"index.html":{}}}],["choice",{"_index":483,"title":{},"body":{"index.html":{}}}],["choose",{"_index":92,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{}}}],["choosetopping",{"_index":78,"title":{"classes/ChooseTopping.html":{}},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["choosetopping(ctx",{"_index":293,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["choosetopping(event",{"_index":374,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["choosetopping(selectedtopping",{"_index":225,"title":{},"body":{"components/SaladComponent.html":{}}}],["chosentoppings",{"_index":317,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["class",{"_index":52,"title":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{}},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["classes",{"_index":79,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"overview.html":{}}}],["cli",{"_index":448,"title":{},"body":{"index.html":{}}}],["code",{"_index":463,"title":{},"body":{"index.html":{}}}],["command",{"_index":484,"title":{},"body":{"index.html":{}}}],["complete",{"_index":441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"overview.html":{}}}],["console.error('something",{"_index":263,"title":{},"body":{"components/SaladComponent.html":{}}}],["console.error(err",{"_index":330,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["console.log('appcomponent",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('from",{"_index":257,"title":{},"body":{"components/SaladComponent.html":{}}}],["console.log('saladcomponent",{"_index":267,"title":{},"body":{"components/SaladComponent.html":{}}}],["console.log('saladservice",{"_index":284,"title":{},"body":{"injectables/SaladService.html":{}}}],["console.log('success",{"_index":261,"title":{},"body":{"components/SaladComponent.html":{}}}],["console.log('toppingscomponent",{"_index":388,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["const",{"_index":96,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":85,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"components/OrderComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{}}}],["constructor(error",{"_index":104,"title":{},"body":{"classes/Error.html":{}}}],["constructor(http",{"_index":274,"title":{},"body":{"injectables/SaladService.html":{}}}],["constructor(name",{"_index":346,"title":{},"body":{"classes/SetName.html":{}}}],["constructor(private",{"_index":283,"title":{},"body":{"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["constructor(public",{"_index":99,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{}}}],["constructor(saladservice",{"_index":291,"title":{},"body":{"injectables/SaladState.html":{}}}],["constructor(status",{"_index":350,"title":{},"body":{"classes/SetStatus.html":{}}}],["constructor(tel",{"_index":353,"title":{},"body":{"classes/SetTel.html":{}}}],["constructor(topping",{"_index":86,"title":{},"body":{"classes/ChooseTopping.html":{}}}],["constructor(toppings",{"_index":356,"title":{},"body":{"classes/Success.html":{}}}],["context",{"_index":192,"title":{},"body":{"injectables/OrderState.html":{}}}],["context.dispatch(new",{"_index":212,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["context.getstate",{"_index":207,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["context.patchstate",{"_index":210,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["context.setstate",{"_index":208,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["coverage",{"_index":390,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ctx",{"_index":296,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["ctx.dispatch(new",{"_index":327,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["ctx.getstate",{"_index":321,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["ctx.patchstate",{"_index":322,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["currency",{"_index":271,"title":{},"body":{"components/SaladComponent.html":{}}}],["currencypipe",{"_index":220,"title":{},"body":{"components/SaladComponent.html":{}}}],["data",{"_index":256,"title":{},"body":{"components/SaladComponent.html":{}}}],["decorators",{"_index":189,"title":{},"body":{"injectables/OrderState.html":{},"injectables/SaladState.html":{}}}],["default",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":206,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{}}}],["dependencies",{"_index":414,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dev",{"_index":455,"title":{},"body":{"index.html":{}}}],["development",{"_index":450,"title":{},"body":{"index.html":{}}}],["directive",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["directives",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":467,"title":{},"body":{"index.html":{}}}],["directory",{"_index":472,"title":{},"body":{"index.html":{}}}],["dist",{"_index":471,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["dynamic",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":481,"title":{},"body":{"index.html":{}}}],["element",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["end",{"_index":480,"title":{},"body":{"index.html":{}}}],["enter",{"_index":176,"title":{},"body":{"components/OrderComponent.html":{}}}],["enumerations",{"_index":434,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":262,"title":{},"body":{"components/SaladComponent.html":{}}}],["error",{"_index":103,"title":{"classes/Error.html":{}},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"coverage.html":{}}}],["event",{"_index":376,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["event.source.selectedoptions.selected[0].value",{"_index":385,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["eventemitter",{"_index":372,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["execute",{"_index":477,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{}}}],["extends",{"_index":337,"title":{},"body":{"classes/SaladStore.html":{}}}],["false",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":126,"title":{},"body":{"components/OrderComponent.html":{}}}],["fetch",{"_index":98,"title":{"classes/Fetch.html":{}},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"injectables/SaladService.html":{},"classes/Success.html":{},"coverage.html":{}}}],["fetchtoppings",{"_index":97,"title":{"classes/FetchToppings.html":{}},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"coverage.html":{}}}],["fetchtoppings()).subscribe",{"_index":259,"title":{},"body":{"components/SaladComponent.html":{}}}],["fetchtoppings(ctx",{"_index":297,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["fetchtoppings2",{"_index":287,"title":{},"body":{"injectables/SaladState.html":{}}}],["fetchtoppings2(ctx",{"_index":300,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["fetchtoppingserror",{"_index":288,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["fetchtoppingserror(ctx",{"_index":303,"title":{},"body":{"injectables/SaladState.html":{}}}],["fetchtoppingssuccess",{"_index":289,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["fetchtoppingssuccess(ctx",{"_index":307,"title":{},"body":{"injectables/SaladState.html":{}}}],["field",{"_index":154,"title":{},"body":{"components/OrderComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["files",{"_index":462,"title":{},"body":{"index.html":{}}}],["first",{"_index":486,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":148,"title":{},"body":{"components/OrderComponent.html":{}}}],["formgroup",{"_index":139,"title":{},"body":{"components/OrderComponent.html":{}}}],["function",{"_index":343,"title":{},"body":{"classes/SaladStore.html":{}}}],["further",{"_index":490,"title":{},"body":{"index.html":{}}}],["generate",{"_index":465,"title":{},"body":{"index.html":{}}}],["generated",{"_index":446,"title":{},"body":{"index.html":{}}}],["gettelcontrol",{"_index":145,"title":{},"body":{"components/OrderComponent.html":{}}}],["getting",{"_index":442,"title":{"index.html":{}},"body":{}}],["gettoppings",{"_index":273,"title":{},"body":{"injectables/SaladService.html":{}}}],["gettotalprice",{"_index":290,"title":{},"body":{"injectables/SaladState.html":{}}}],["gettotalprice(state",{"_index":311,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["go",{"_index":493,"title":{},"body":{"index.html":{}}}],["help",{"_index":491,"title":{},"body":{"index.html":{}}}],["html",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["http",{"_index":277,"title":{},"body":{"injectables/SaladService.html":{}}}],["http://localhost:4200",{"_index":457,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":275,"title":{},"body":{"injectables/SaladService.html":{}}}],["httperrorresponse",{"_index":93,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{}}}],["id",{"_index":360,"title":{},"body":{"interfaces/Topping.html":{}}}],["identifier",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["if(order.name",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":114,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{},"index.html":{}}}],["import",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{}}}],["init",{"_index":101,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{}}}],["inject",{"_index":147,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{}}}],["inject(activatedroute",{"_index":230,"title":{},"body":{"components/SaladComponent.html":{}}}],["inject(formbuilder",{"_index":137,"title":{},"body":{"components/OrderComponent.html":{}}}],["inject(router",{"_index":141,"title":{},"body":{"components/OrderComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(saladservice",{"_index":250,"title":{},"body":{"components/SaladComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(store",{"_index":143,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":181,"title":{"injectables/OrderState.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{}},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"coverage.html":{}}}],["injectables",{"_index":183,"title":{},"body":{"injectables/OrderState.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"overview.html":{}}}],["input",{"_index":382,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["inputs",{"_index":368,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["interface",{"_index":203,"title":{"interfaces/OrderStateModel.html":{},"interfaces/SaladStateModel.html":{},"interfaces/Topping.html":{}},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"interfaces/Topping.html":{},"coverage.html":{}}}],["interfaces",{"_index":215,"title":{},"body":{"interfaces/OrderStateModel.html":{},"interfaces/SaladStateModel.html":{},"interfaces/Topping.html":{},"overview.html":{}}}],["item",{"_index":379,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["item.id",{"_index":387,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["karma",{"_index":479,"title":{},"body":{"index.html":{}}}],["kitchen",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{}}}],["kitchen'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["kitchen.component.css",{"_index":111,"title":{},"body":{"components/KitchenComponent.html":{}}}],["kitchen.component.html",{"_index":110,"title":{},"body":{"components/KitchenComponent.html":{}}}],["kitchencomponent",{"_index":66,"title":{"components/KitchenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["legend",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["literal",{"_index":340,"title":{},"body":{"classes/SaladStore.html":{}}}],["logchangedetection",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["matbutton",{"_index":122,"title":{},"body":{"components/OrderComponent.html":{}}}],["matching",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["materror",{"_index":121,"title":{},"body":{"components/OrderComponent.html":{}}}],["matformfield",{"_index":118,"title":{},"body":{"components/OrderComponent.html":{}}}],["maticon",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["maticonbutton",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":120,"title":{},"body":{"components/OrderComponent.html":{}}}],["matlabel",{"_index":119,"title":{},"body":{"components/OrderComponent.html":{}}}],["matlistoption",{"_index":364,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["matselectionlist",{"_index":362,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["matselectionlistchange",{"_index":242,"title":{},"body":{"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["mattoolbar",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["menu",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"classes/SaladStore.html":{},"components/ToppingsComponent.html":{}}}],["miscellaneous",{"_index":433,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["models/status.enum",{"_index":200,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{}}}],["models/topping.model",{"_index":95,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{}}}],["modules",{"_index":499,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":492,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"index.html":{}}}],["namespace",{"_index":100,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{}}}],["navigate",{"_index":456,"title":{},"body":{"index.html":{}}}],["need",{"_index":485,"title":{},"body":{"index.html":{}}}],["new",{"_index":384,"title":{},"body":{"components/ToppingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["next",{"_index":260,"title":{},"body":{"components/SaladComponent.html":{}}}],["ng",{"_index":453,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":363,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["ngif",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["ngoninit",{"_index":130,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{}}}],["ngxs/devtools",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["ngxs/router",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":156,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"dependencies.html":{}}}],["null",{"_index":205,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["number",{"_index":178,"title":{},"body":{"components/OrderComponent.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{}}}],["observable",{"_index":280,"title":{},"body":{"injectables/SaladService.html":{}}}],["of(ctx.getstate().toppings",{"_index":332,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["oninit",{"_index":115,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{}}}],["optional",{"_index":89,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"injectables/OrderState.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{}}}],["order",{"_index":116,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"miscellaneous/variables.html":{}}}],["order'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["order.action",{"_index":202,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["order.component.css",{"_index":124,"title":{},"body":{"components/OrderComponent.html":{}}}],["order.component.html",{"_index":123,"title":{},"body":{"components/OrderComponent.html":{}}}],["order.tel",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ordercomponent",{"_index":68,"title":{"components/OrderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["orderform",{"_index":127,"title":{},"body":{"components/OrderComponent.html":{}}}],["orderstate",{"_index":182,"title":{"injectables/OrderState.html":{}},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"coverage.html":{}}}],["orderstatemodel",{"_index":204,"title":{"interfaces/OrderStateModel.html":{}},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"classes/SaladStore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":495,"title":{},"body":{"index.html":{}}}],["output",{"_index":383,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["outputs",{"_index":369,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["overview",{"_index":496,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":413,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":498,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":88,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"injectables/OrderState.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{}}}],["phone",{"_index":177,"title":{},"body":{"components/OrderComponent.html":{}}}],["pickup",{"_index":440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["platform",{"_index":482,"title":{},"body":{"index.html":{}}}],["please",{"_index":175,"title":{},"body":{"components/OrderComponent.html":{}}}],["plugin",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["preparing",{"_index":437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["price",{"_index":270,"title":{},"body":{"components/SaladComponent.html":{},"interfaces/Topping.html":{}}}],["private",{"_index":125,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{}}}],["project",{"_index":445,"title":{},"body":{"index.html":{}}}],["properties",{"_index":28,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/OrderComponent.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"interfaces/SaladStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":282,"title":{},"body":{"injectables/SaladService.html":{}}}],["providehttpclient",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers/salad.service",{"_index":152,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["providestore([orderstate",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":81,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{}}}],["reactiveformsmodule",{"_index":117,"title":{},"body":{"components/OrderComponent.html":{}}}],["readonly",{"_index":84,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{}}}],["ready",{"_index":439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readyforpickup",{"_index":438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reference",{"_index":497,"title":{},"body":{"index.html":{}}}],["reload",{"_index":460,"title":{},"body":{"index.html":{}}}],["rendered",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["resolvefn",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolver",{"_index":258,"title":{},"body":{"components/SaladComponent.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"components/ToppingsComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"classes/SaladStore.html":{},"components/ToppingsComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/SaladService.html":{}}}],["root'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["route",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":128,"title":{},"body":{"components/OrderComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":452,"title":{},"body":{"index.html":{}}}],["running",{"_index":473,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":316,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"dependencies.html":{}}}],["salad",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"miscellaneous/variables.html":{}}}],["salad'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["salad.action",{"_index":313,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["salad.component.css",{"_index":222,"title":{},"body":{"components/SaladComponent.html":{}}}],["salad.component.html",{"_index":221,"title":{},"body":{"components/SaladComponent.html":{}}}],["saladbar",{"_index":444,"title":{},"body":{"index.html":{}}}],["saladcomponent",{"_index":70,"title":{"components/SaladComponent.html":{}},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["saladguard",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["saladservice",{"_index":151,"title":{"injectables/SaladService.html":{}},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saladservice.gettoppings",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saladstate",{"_index":247,"title":{"injectables/SaladState.html":{}},"body":{"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saladstatemodel",{"_index":248,"title":{"interfaces/SaladStateModel.html":{}},"body":{"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"coverage.html":{}}}],["saladstore",{"_index":335,"title":{"classes/SaladStore.html":{}},"body":{"classes/SaladStore.html":{},"coverage.html":{}}}],["scaffolding",{"_index":464,"title":{},"body":{"index.html":{}}}],["selectedtopping",{"_index":227,"title":{},"body":{"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"components/ToppingsComponent.html":{}}}],["selectordersnapshot",{"_index":338,"title":{},"body":{"classes/SaladStore.html":{}}}],["selectordersnapshot(callback",{"_index":339,"title":{},"body":{"classes/SaladStore.html":{}}}],["selecttopping",{"_index":370,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["serve",{"_index":454,"title":{},"body":{"index.html":{}}}],["server",{"_index":451,"title":{},"body":{"index.html":{}}}],["set",{"_index":349,"title":{},"body":{"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{}}}],["setname",{"_index":157,"title":{"classes/SetName.html":{}},"body":{"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"coverage.html":{}}}],["setname(context",{"_index":186,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["setname(this.orderform.value.name",{"_index":172,"title":{},"body":{"components/OrderComponent.html":{}}}],["setstatus",{"_index":185,"title":{"classes/SetStatus.html":{}},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"coverage.html":{}}}],["setstatus(context",{"_index":193,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["setstatus(status.new",{"_index":213,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["settel",{"_index":158,"title":{"classes/SetTel.html":{}},"body":{"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"coverage.html":{}}}],["settel(context",{"_index":196,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{}}}],["settel(this.orderform.value.tel",{"_index":173,"title":{},"body":{"components/OrderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"index.html":{}}}],["src/.../app.config.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../salad.action.ts",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../salad.guard.ts",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../toppings.resolver.ts",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/salad.guard.ts",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/toppings.resolver.ts",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/kitchen/kitchen.component.ts",{"_index":109,"title":{},"body":{"components/KitchenComponent.html":{},"coverage.html":{}}}],["src/app/models/status.enum.ts",{"_index":436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/topping.model.ts",{"_index":359,"title":{},"body":{"interfaces/Topping.html":{},"coverage.html":{}}}],["src/app/order/order.component.ts",{"_index":113,"title":{},"body":{"components/OrderComponent.html":{},"coverage.html":{}}}],["src/app/order/order.component.ts:28",{"_index":140,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/order/order.component.ts:30",{"_index":138,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/order/order.component.ts:31",{"_index":142,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/order/order.component.ts:32",{"_index":144,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/order/order.component.ts:40",{"_index":134,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/order/order.component.ts:47",{"_index":146,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/order/order.component.ts:51",{"_index":136,"title":{},"body":{"components/OrderComponent.html":{}}}],["src/app/providers/salad.service.ts",{"_index":272,"title":{},"body":{"injectables/SaladService.html":{},"coverage.html":{}}}],["src/app/providers/salad.service.ts:10",{"_index":276,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/app/providers/salad.service.ts:20",{"_index":278,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/app/providers/salad.service.ts:9",{"_index":281,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/app/salad/salad.component.ts",{"_index":216,"title":{},"body":{"components/SaladComponent.html":{},"coverage.html":{}}}],["src/app/salad/salad.component.ts:30",{"_index":231,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:31",{"_index":235,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:33",{"_index":238,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:36",{"_index":234,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:40",{"_index":240,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:42",{"_index":229,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:59",{"_index":226,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/salad.component.ts:63",{"_index":228,"title":{},"body":{"components/SaladComponent.html":{}}}],["src/app/salad/store/salad.action.ts",{"_index":80,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/salad/store/salad.action.ts:11",{"_index":87,"title":{},"body":{"classes/ChooseTopping.html":{}}}],["src/app/salad/store/salad.action.ts:13",{"_index":90,"title":{},"body":{"classes/ChooseTopping.html":{}}}],["src/app/salad/store/salad.action.ts:18",{"_index":107,"title":{},"body":{"classes/Fetch.html":{}}}],["src/app/salad/store/salad.action.ts:21",{"_index":357,"title":{},"body":{"classes/Success.html":{}}}],["src/app/salad/store/salad.action.ts:22",{"_index":358,"title":{},"body":{"classes/Success.html":{}}}],["src/app/salad/store/salad.action.ts:25",{"_index":105,"title":{},"body":{"classes/Error.html":{}}}],["src/app/salad/store/salad.action.ts:26",{"_index":106,"title":{},"body":{"classes/Error.html":{}}}],["src/app/salad/store/salad.action.ts:7",{"_index":108,"title":{},"body":{"classes/FetchToppings.html":{}}}],["src/app/salad/store/salad.state.ts",{"_index":286,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"coverage.html":{}}}],["src/app/salad/store/salad.state.ts:23",{"_index":292,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/store/salad.state.ts:27",{"_index":312,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/store/salad.state.ts:34",{"_index":295,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/store/salad.state.ts:42",{"_index":299,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/store/salad.state.ts:53",{"_index":302,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/store/salad.state.ts:67",{"_index":310,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/store/salad.state.ts:77",{"_index":306,"title":{},"body":{"injectables/SaladState.html":{}}}],["src/app/salad/toppings/toppings.component.ts",{"_index":361,"title":{},"body":{"components/ToppingsComponent.html":{},"coverage.html":{}}}],["src/app/salad/toppings/toppings.component.ts:16",{"_index":371,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["src/app/salad/toppings/toppings.component.ts:19",{"_index":373,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["src/app/salad/toppings/toppings.component.ts:21",{"_index":375,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["src/app/salad/toppings/toppings.component.ts:27",{"_index":380,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["src/app/salad/toppings/toppings.component.ts:31",{"_index":377,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["src/app/store/order.action.ts",{"_index":345,"title":{},"body":{"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"coverage.html":{}}}],["src/app/store/order.action.ts:10",{"_index":354,"title":{},"body":{"classes/SetTel.html":{}}}],["src/app/store/order.action.ts:12",{"_index":355,"title":{},"body":{"classes/SetTel.html":{}}}],["src/app/store/order.action.ts:16",{"_index":351,"title":{},"body":{"classes/SetStatus.html":{}}}],["src/app/store/order.action.ts:18",{"_index":352,"title":{},"body":{"classes/SetStatus.html":{}}}],["src/app/store/order.action.ts:4",{"_index":347,"title":{},"body":{"classes/SetName.html":{}}}],["src/app/store/order.action.ts:6",{"_index":348,"title":{},"body":{"classes/SetName.html":{}}}],["src/app/store/order.state.ts",{"_index":184,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"coverage.html":{}}}],["src/app/store/order.state.ts:23",{"_index":191,"title":{},"body":{"injectables/OrderState.html":{}}}],["src/app/store/order.state.ts:32",{"_index":198,"title":{},"body":{"injectables/OrderState.html":{}}}],["src/app/store/order.state.ts:40",{"_index":195,"title":{},"body":{"injectables/OrderState.html":{}}}],["src/app/utils/store.utils.ts",{"_index":336,"title":{},"body":{"classes/SaladStore.html":{},"coverage.html":{}}}],["src/app/utils/store.utils.ts:5",{"_index":341,"title":{},"body":{"classes/SaladStore.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["start",{"_index":180,"title":{},"body":{"components/OrderComponent.html":{}}}],["started",{"_index":443,"title":{"index.html":{}},"body":{}}],["startorder",{"_index":131,"title":{},"body":{"components/OrderComponent.html":{}}}],["state",{"_index":201,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"miscellaneous/variables.html":{}}}],["state.chosentoppings",{"_index":323,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["state.chosentoppings.reduce((total",{"_index":318,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["state.order.name",{"_index":233,"title":{},"body":{"components/SaladComponent.html":{}}}],["state.salad.toppings",{"_index":237,"title":{},"body":{"components/SaladComponent.html":{}}}],["statecontext",{"_index":187,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["statements",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":83,"title":{},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{}}}],["status",{"_index":199,"title":{},"body":{"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":129,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{},"classes/SaladStore.html":{},"miscellaneous/variables.html":{}}}],["store.snapshot().order",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store/order.action",{"_index":159,"title":{},"body":{"components/OrderComponent.html":{}}}],["store/order.state",{"_index":245,"title":{},"body":{"components/SaladComponent.html":{},"classes/SaladStore.html":{}}}],["store/salad.action",{"_index":246,"title":{},"body":{"components/SaladComponent.html":{}}}],["store/salad.state",{"_index":249,"title":{},"body":{"components/SaladComponent.html":{}}}],["stored",{"_index":470,"title":{},"body":{"index.html":{}}}],["string",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"interfaces/Topping.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["success",{"_index":102,"title":{"classes/Success.html":{}},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"classes/Success.html":{},"coverage.html":{}}}],["super.selectsnapshot(callback",{"_index":344,"title":{},"body":{"classes/SaladStore.html":{}}}],["table",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":315,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["tap((toppings",{"_index":326,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["tel",{"_index":163,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/SaladService.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{}}}],["telcontrol",{"_index":133,"title":{},"body":{"components/OrderComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["test",{"_index":476,"title":{},"body":{"index.html":{}}}],["testing",{"_index":488,"title":{},"body":{"index.html":{}}}],["tests",{"_index":475,"title":{},"body":{"index.html":{}}}],["this.activatedroute.data.subscribe",{"_index":255,"title":{},"body":{"components/SaladComponent.html":{}}}],["this.fb.group",{"_index":161,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.http.get('https://retoolapi.dev/udhtkg/toppings",{"_index":285,"title":{},"body":{"injectables/SaladService.html":{}}}],["this.orderform",{"_index":160,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderform.get('tel",{"_index":165,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderform.valid",{"_index":166,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderform.value.name",{"_index":168,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderform.value.tel",{"_index":170,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.router.navigate(['salad",{"_index":174,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.saladservice.gettoppings",{"_index":251,"title":{},"body":{"components/SaladComponent.html":{}}}],["this.saladservice.gettoppings().pipe",{"_index":325,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["this.saladservice.gettoppings().subscribe(values",{"_index":252,"title":{},"body":{"components/SaladComponent.html":{}}}],["this.saladservice.name",{"_index":167,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.saladservice.tel",{"_index":169,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.selecttopping.emit(selectedtopping",{"_index":386,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["this.store.dispatch(new",{"_index":171,"title":{},"body":{"components/OrderComponent.html":{},"components/SaladComponent.html":{}}}],["this.store.select",{"_index":236,"title":{},"body":{"components/SaladComponent.html":{}}}],["this.store.selectsignal",{"_index":232,"title":{},"body":{"components/SaladComponent.html":{}}}],["this.store.selectsignal(saladstate.gettotalprice",{"_index":239,"title":{},"body":{"components/SaladComponent.html":{}}}],["this.toppings",{"_index":253,"title":{},"body":{"components/SaladComponent.html":{}}}],["title",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["topping",{"_index":82,"title":{"interfaces/Topping.html":{}},"body":{"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["topping.name",{"_index":389,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["topping.price",{"_index":319,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"components/ToppingsComponent.html":{}}}],["toppings",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{}}}],["toppings.component.css",{"_index":366,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["toppings.component.html",{"_index":365,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["toppings.error",{"_index":304,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["toppings.error(err",{"_index":331,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["toppings.fetch",{"_index":266,"title":{},"body":{"components/SaladComponent.html":{}}}],["toppings.success",{"_index":308,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["toppings.success(toppings",{"_index":328,"title":{},"body":{"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["toppings/toppings.component",{"_index":244,"title":{},"body":{"components/SaladComponent.html":{}}}],["toppingscomponent",{"_index":72,"title":{"components/ToppingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"coverage.html":{}}}],["toppingsresolver",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":269,"title":{},"body":{"components/SaladComponent.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{}}}],["totalprice",{"_index":224,"title":{},"body":{"components/SaladComponent.html":{}}}],["tracktoppings",{"_index":367,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["tracktoppings(_index",{"_index":378,"title":{},"body":{"components/ToppingsComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/OrderComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/SaladComponent.html":{},"injectables/SaladService.html":{},"injectables/SaladState.html":{},"interfaces/SaladStateModel.html":{},"classes/SaladStore.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"interfaces/Topping.html":{},"components/ToppingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":474,"title":{},"body":{"index.html":{}}}],["use",{"_index":466,"title":{},"body":{"index.html":{}}}],["valid",{"_index":179,"title":{},"body":{"components/OrderComponent.html":{}}}],["validators",{"_index":149,"title":{},"body":{"components/OrderComponent.html":{}}}],["validators.minlength(8",{"_index":164,"title":{},"body":{"components/OrderComponent.html":{}}}],["validators.required",{"_index":162,"title":{},"body":{"components/OrderComponent.html":{}}}],["value",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/ChooseTopping.html":{},"classes/Error.html":{},"classes/Fetch.html":{},"classes/FetchToppings.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"classes/SetName.html":{},"classes/SetStatus.html":{},"classes/SetTel.html":{},"classes/Success.html":{},"components/ToppingsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":254,"title":{},"body":{"components/SaladComponent.html":{}}}],["var",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/KitchenComponent.html":{},"components/OrderComponent.html":{},"components/SaladComponent.html":{},"components/ToppingsComponent.html":{}}}],["variable",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":504,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":449,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":478,"title":{},"body":{"index.html":{}}}],["void",{"_index":135,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderState.html":{},"components/SaladComponent.html":{},"injectables/SaladState.html":{},"classes/SaladStore.html":{},"components/ToppingsComponent.html":{}}}],["welcome",{"_index":268,"title":{},"body":{"components/SaladComponent.html":{}}}],["went",{"_index":264,"title":{},"body":{"components/SaladComponent.html":{}}}],["withngxsreduxdevtoolsplugin",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withngxsrouterplugin",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":112,"title":{},"body":{"components/KitchenComponent.html":{}}}],["wrong",{"_index":265,"title":{},"body":{"components/SaladComponent.html":{}}}],["zone.js",{"_index":431,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbar\n                            MatIconButton\n                            MatIcon\n                            RouterLink\n                            RouterOutlet\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logChangeDetection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logChangeDetection\n                        \n                    \n                \n            \n            \n                \nlogChangeDetection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'salad-bar'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { NgIf } from '@angular/common';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrl: './app.component.css',\n    standalone: true,\n    imports: [MatToolbar, MatIconButton, MatIcon, RouterLink, RouterOutlet, NgIf]\n})\nexport class AppComponent {\n  title = 'salad-bar';\n\n  logChangeDetection() {\n    console.log('AppComponent rendered');\n    return true;\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  Salad Bar\n  \n  \n    kitchen\n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu    Salad Bar        kitchen  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'KitchenComponent', 'selector': 'app-kitchen'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'SaladComponent', 'selector': 'app-salad'},{'name': 'ToppingsComponent', 'selector': 'app-toppings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChooseTopping.html":{"url":"classes/ChooseTopping.html","title":"class - ChooseTopping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChooseTopping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                topping\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(topping: Topping)\n                    \n                \n                        \n                            \n                                Defined in src/app/salad/store/salad.action.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topping\n                                                  \n                                                        \n                                                                        Topping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        topping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Topping\n\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${ACTION_SCOPE} Choose Topping`\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Topping } from '../../models/topping.model';\n\nconst ACTION_SCOPE = '[Salad]';\n\nexport class FetchToppings {\n  static readonly type = `${ACTION_SCOPE} Fetch Toppings`;\n}\n\nexport class ChooseTopping {\n  static readonly type = `${ACTION_SCOPE} Choose Topping`;\n\n  constructor(public topping: Topping) {}\n}\n\nexport namespace Toppings {\n  export class Fetch {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Init`;\n  }\n  export class Success {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Success`;\n    constructor(public toppings: Topping[]) {}\n  }\n  export class Error {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Error`;\n    constructor(public error: HttpErrorResponse) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Error.html":{"url":"classes/Error.html","title":"class - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: HttpErrorResponse)\n                    \n                \n                        \n                            \n                                Defined in src/app/salad/store/salad.action.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        HttpErrorResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpErrorResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${ACTION_SCOPE} Fetch Toppings Error`\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Topping } from '../../models/topping.model';\n\nconst ACTION_SCOPE = '[Salad]';\n\nexport class FetchToppings {\n  static readonly type = `${ACTION_SCOPE} Fetch Toppings`;\n}\n\nexport class ChooseTopping {\n  static readonly type = `${ACTION_SCOPE} Choose Topping`;\n\n  constructor(public topping: Topping) {}\n}\n\nexport namespace Toppings {\n  export class Fetch {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Init`;\n  }\n  export class Success {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Success`;\n    constructor(public toppings: Topping[]) {}\n  }\n  export class Error {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Error`;\n    constructor(public error: HttpErrorResponse) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fetch.html":{"url":"classes/Fetch.html","title":"class - Fetch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fetch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${ACTION_SCOPE} Fetch Toppings Init`\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Topping } from '../../models/topping.model';\n\nconst ACTION_SCOPE = '[Salad]';\n\nexport class FetchToppings {\n  static readonly type = `${ACTION_SCOPE} Fetch Toppings`;\n}\n\nexport class ChooseTopping {\n  static readonly type = `${ACTION_SCOPE} Choose Topping`;\n\n  constructor(public topping: Topping) {}\n}\n\nexport namespace Toppings {\n  export class Fetch {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Init`;\n  }\n  export class Success {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Success`;\n    constructor(public toppings: Topping[]) {}\n  }\n  export class Error {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Error`;\n    constructor(public error: HttpErrorResponse) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchToppings.html":{"url":"classes/FetchToppings.html","title":"class - FetchToppings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchToppings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${ACTION_SCOPE} Fetch Toppings`\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Topping } from '../../models/topping.model';\n\nconst ACTION_SCOPE = '[Salad]';\n\nexport class FetchToppings {\n  static readonly type = `${ACTION_SCOPE} Fetch Toppings`;\n}\n\nexport class ChooseTopping {\n  static readonly type = `${ACTION_SCOPE} Choose Topping`;\n\n  constructor(public topping: Topping) {}\n}\n\nexport namespace Toppings {\n  export class Fetch {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Init`;\n  }\n  export class Success {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Success`;\n    constructor(public toppings: Topping[]) {}\n  }\n  export class Error {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Error`;\n    constructor(public error: HttpErrorResponse) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KitchenComponent.html":{"url":"components/KitchenComponent.html","title":"component - KitchenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  KitchenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/kitchen/kitchen.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-kitchen\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./kitchen.component.html\n            \n\n\n\n            \n                styleUrl\n                ./kitchen.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-kitchen',\n    templateUrl: './kitchen.component.html',\n    styleUrl: './kitchen.component.css',\n    standalone: true\n})\nexport class KitchenComponent {\n\n}\n\n    \n\n    \n        kitchen works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'kitchen works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'KitchenComponent', 'selector': 'app-kitchen'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'SaladComponent', 'selector': 'app-salad'},{'name': 'ToppingsComponent', 'selector': 'app-toppings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'KitchenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderComponent.html":{"url":"components/OrderComponent.html","title":"component - OrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order/order.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatFormField\n                            MatLabel\n                            MatInput\n                                MatError\n                            NgIf\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fb\n                            \n                            \n                                orderForm\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                startOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    telControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order/order.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startOrder\n                        \n                    \n                \n            \n            \n                \nstartOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order/order.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/order/order.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/order/order.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/order/order.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/order/order.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        telControl\n                    \n                \n\n                \n                    \n                        gettelControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/order/order.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { SaladService } from '../providers/salad.service';\nimport { Router } from '@angular/router';\nimport { MatFormField, MatLabel, MatError } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { NgIf } from '@angular/common';\nimport { MatButton } from '@angular/material/button';\nimport { Store } from '@ngxs/store';\nimport { SetName, SetTel } from '../store/order.action';\n\n@Component({\n    selector: 'app-order',\n    templateUrl: './order.component.html',\n    styleUrl: './order.component.css',\n    standalone: true,\n    imports: [\n        ReactiveFormsModule,\n        MatFormField,\n        MatLabel,\n        MatInput,\n        MatError,\n        NgIf,\n        MatButton,\n    ],\n})\nexport class OrderComponent implements OnInit {\n  orderForm!: FormGroup;\n\n  private fb = inject(FormBuilder);\n  private router = inject(Router);\n  private store = inject(Store)\n\n  // constructor(\n  //   private fb: FormBuilder,\n  //   private saladService: SaladService,\n  //   private router: Router\n  // ) {}\n\n  ngOnInit(): void {\n    this.orderForm = this.fb.group({\n      name: ['', Validators.required],\n      tel: ['', [Validators.required, Validators.minLength(8)]],\n    });\n  }\n\n  get telControl() {\n    return this.orderForm.get('tel');\n  }\n\n  startOrder() {\n    if (this.orderForm.valid) {\n      // this.saladService.name = this.orderForm.value.name;\n      // this.saladService.tel = this.orderForm.value.tel;\n      this.store.dispatch(new SetName(this.orderForm.value.name))\n      this.store.dispatch(new SetTel(this.orderForm.value.tel))\n\n      this.router.navigate(['salad']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Name\n    Name\n    \n    Please enter your name\n  \n  \n    Tel\n    \n    \n      Please enter a phone number\n    \n    \n      Please enter a valid phone number\n    \n  \n  \n    Start order !\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name    Name        Please enter your name        Tel              Please enter a phone number              Please enter a valid phone number            Start order !  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'KitchenComponent', 'selector': 'app-kitchen'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'SaladComponent', 'selector': 'app-salad'},{'name': 'ToppingsComponent', 'selector': 'app-toppings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderState.html":{"url":"injectables/OrderState.html","title":"injectable - OrderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/order.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setName\n                            \n                            \n                                    \n                                setStatus\n                            \n                            \n                                    \n                                setTel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setName(context: StateContext, action: SetName)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetName)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/order.state.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            SetName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(context: StateContext, action: SetStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetStatus)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/order.state.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            SetStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setTel\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTel(context: StateContext, action: SetTel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetTel)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/order.state.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            SetTel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Status } from '../models/status.enum';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { SetName, SetStatus, SetTel } from './order.action';\n\nexport interface OrderStateModel {\n  name: string;\n  tel: string;\n  status: Status | null;\n}\n\n@State({\n  name: 'order',\n  defaults: {\n    name: '',\n    tel: '',\n    status: null,\n  },\n})\n@Injectable()\nexport class OrderState {\n  @Action(SetName)\n  setName(context: StateContext, action: SetName) {\n    const state = context.getState();\n    context.setState({\n      ...state,\n      name: action.name,\n    });\n  }\n\n  @Action(SetTel)\n  setTel(context: StateContext, action: SetTel) {\n    context.patchState({\n      tel: action.tel,\n    });\n    context.dispatch(new SetStatus(Status.New));\n  }\n\n  @Action(SetStatus)\n  setStatus(context: StateContext, action: SetStatus) {\n    context.patchState({\n      status: action.status,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderStateModel.html":{"url":"interfaces/OrderStateModel.html","title":"interface - OrderStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/order.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Status } from '../models/status.enum';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { SetName, SetStatus, SetTel } from './order.action';\n\nexport interface OrderStateModel {\n  name: string;\n  tel: string;\n  status: Status | null;\n}\n\n@State({\n  name: 'order',\n  defaults: {\n    name: '',\n    tel: '',\n    status: null,\n  },\n})\n@Injectable()\nexport class OrderState {\n  @Action(SetName)\n  setName(context: StateContext, action: SetName) {\n    const state = context.getState();\n    context.setState({\n      ...state,\n      name: action.name,\n    });\n  }\n\n  @Action(SetTel)\n  setTel(context: StateContext, action: SetTel) {\n    context.patchState({\n      tel: action.tel,\n    });\n    context.dispatch(new SetStatus(Status.New));\n  }\n\n  @Action(SetStatus)\n  setStatus(context: StateContext, action: SetStatus) {\n    context.patchState({\n      status: action.status,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaladComponent.html":{"url":"components/SaladComponent.html","title":"component - SaladComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SaladComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/salad/salad.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-salad\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                                ToppingsComponent\n                            AsyncPipe\n                            CurrencyPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./salad.component.html\n            \n\n\n\n            \n                styleUrl\n                ./salad.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activatedRoute\n                            \n                            \n                                name\n                            \n                            \n                                    Private\n                                store\n                            \n                            \n                                toppings$\n                            \n                            \n                                totalPrice\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chooseTopping\n                            \n                            \n                                logChangeDetection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chooseTopping\n                        \n                    \n                \n            \n            \n                \nchooseTopping(selectedTopping: Topping)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/salad/salad.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedTopping\n                                            \n                                                            Topping\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logChangeDetection\n                        \n                    \n                \n            \n            \n                \nlogChangeDetection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/salad/salad.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/salad/salad.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/salad.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.selectSignal(\n    (state) => state.order.name\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/salad.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/salad.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toppings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    (state) => state.salad.toppings\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/salad.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.selectSignal(SaladState.getTotalPrice)\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/salad.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from '@angular/core';\nimport { SaladService } from '../providers/salad.service';\nimport { Topping } from '../models/topping.model';\nimport { MatSelectionListChange } from '@angular/material/list';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgIf, AsyncPipe, CurrencyPipe } from '@angular/common';\nimport { ToppingsComponent } from './toppings/toppings.component';\nimport { Store } from '@ngxs/store';\nimport { OrderStateModel } from '../store/order.state';\nimport { ChooseTopping, FetchToppings, Toppings } from './store/salad.action';\nimport { SaladState, SaladStateModel } from './store/salad.state';\n\n@Component({\n  selector: 'app-salad',\n  templateUrl: './salad.component.html',\n  styleUrl: './salad.component.css',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgIf, ToppingsComponent, AsyncPipe, CurrencyPipe],\n})\nexport class SaladComponent implements OnInit {\n  // saladService = inject(SaladService);\n  //  toppings: Topping[] = [];\n  // toppings$ = this.saladService.getToppings();\n  private activatedRoute = inject(ActivatedRoute);\n  private store = inject(Store);\n\n  toppings$ = this.store.select(\n    (state) => state.salad.toppings\n  );\n  name = this.store.selectSignal(\n    (state) => state.order.name\n  );\n\n  totalPrice = this.store.selectSignal(SaladState.getTotalPrice);\n\n  ngOnInit() {\n    // this.saladService.getToppings().subscribe(values => {\n    //   this.toppings = values;\n    // })\n\n    this.activatedRoute.data.subscribe(({ data }) => {\n      console.log('from resolver', data);\n    });\n\n    // this.store.dispatch(new FetchToppings()).subscribe({\n    //   next: () => console.log('success !'),\n    //   error: (err) => console.error('Something went wrong'),\n    // });\n\n    this.store.dispatch(new Toppings.Fetch())\n  }\n\n  chooseTopping(selectedTopping: Topping) {\n    this.store.dispatch(new ChooseTopping(selectedTopping));\n  }\n\n  logChangeDetection() {\n    console.log('SaladComponent rendered');\n    return true;\n  }\n}\n\n    \n\n    \n        Welcome {{ name() }}\n\n -->\n\nTotal price : {{ totalPrice() | currency : '€' }}\n\n\n\n\n\nSaladComponent\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome {{ name() }} -->Total price : {{ totalPrice() | currency : \\'€\\' }}SaladComponent'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'KitchenComponent', 'selector': 'app-kitchen'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'SaladComponent', 'selector': 'app-salad'},{'name': 'ToppingsComponent', 'selector': 'app-toppings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaladComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaladService.html":{"url":"injectables/SaladService.html","title":"injectable - SaladService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaladService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/salad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                tel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToppings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/providers/salad.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToppings\n                        \n                    \n                \n            \n            \n                \ngetToppings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/providers/salad.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Fetch toppings from API\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                an Observable of Toppings[]\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/providers/salad.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/providers/salad.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Topping } from \"../models/topping.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SaladService {\n    name!: string;\n    tel!: string;\n\n    constructor(private http: HttpClient){\n        console.log('SaladService constructor');\n    }\n\n    /**\n     * Fetch toppings from API\n     * @returns an Observable of Toppings[]\n     */\n    getToppings() {\n        return this.http.get('https://retoolapi.dev/udhTkG/toppings')\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaladState.html":{"url":"injectables/SaladState.html","title":"injectable - SaladState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaladState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                chooseTopping\n                            \n                            \n                                    \n                                fetchToppings\n                            \n                            \n                                    \n                                fetchToppings2\n                            \n                            \n                                    \n                                fetchToppingsError\n                            \n                            \n                                    \n                                fetchToppingsSuccess\n                            \n                            \n                                    \n                                    Static\n                                getTotalPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(saladService: SaladService)\n                    \n                \n                        \n                            \n                                Defined in src/app/salad/store/salad.state.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saladService\n                                                  \n                                                        \n                                                                        SaladService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chooseTopping\n                        \n                    \n                \n            \n            \n                \n                        \n                    chooseTopping(ctx: StateContext, action: ChooseTopping)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ChooseTopping)\n                \n            \n\n                    \n                        \n                            Defined in src/app/salad/store/salad.state.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            ChooseTopping\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fetchToppings\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchToppings(ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchToppings)\n                \n            \n\n                    \n                        \n                            Defined in src/app/salad/store/salad.state.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fetchToppings2\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchToppings2(ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Toppings.Fetch)\n                \n            \n\n                    \n                        \n                            Defined in src/app/salad/store/salad.state.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fetchToppingsError\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchToppingsError(ctx: StateContext, action: Toppings.Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Toppings.Error)\n                \n            \n\n                    \n                        \n                            Defined in src/app/salad/store/salad.state.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Toppings.Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fetchToppingsSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchToppingsSuccess(ctx: StateContext, action: Toppings.Success)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Toppings.Success)\n                \n            \n\n                    \n                        \n                            Defined in src/app/salad/store/salad.state.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Toppings.Success\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Static\n                        getTotalPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalPrice(state: SaladStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n                    \n                        \n                            Defined in src/app/salad/store/salad.state.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            SaladStateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Topping } from '../../models/topping.model';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { ChooseTopping, FetchToppings, Toppings } from './salad.action';\nimport { SaladService } from '../../providers/salad.service';\nimport { catchError, of, tap } from 'rxjs';\n\nexport interface SaladStateModel {\n  toppings: Topping[];\n  chosenToppings: Topping[];\n  error: string | null;\n}\n\n@State({\n  name: 'salad',\n  defaults: {\n    toppings: [],\n    chosenToppings: [],\n    error: null,\n  },\n})\n@Injectable()\nexport class SaladState {\n  constructor(private saladService: SaladService) {}\n\n  @Selector()\n  static getTotalPrice(state: SaladStateModel) {\n    return state.chosenToppings.reduce((total, topping) => {\n      return (total + topping.price);\n    }, 0);\n  }\n\n  @Action(ChooseTopping)\n  chooseTopping(ctx: StateContext, action: ChooseTopping) {\n    const state = ctx.getState();\n    ctx.patchState({\n      chosenToppings: [...state.chosenToppings, action.topping],\n    });\n  }\n\n  @Action(FetchToppings)\n  fetchToppings(ctx: StateContext) {\n    return this.saladService.getToppings().pipe(\n      tap((toppings) => {\n        ctx.patchState({\n          toppings,\n        });\n      })\n    );\n  }\n\n  @Action(Toppings.Fetch)\n  fetchToppings2(ctx: StateContext) {\n    return this.saladService.getToppings().pipe(\n      tap((toppings) => {\n        ctx.dispatch(new Toppings.Success(toppings));\n      }),\n      catchError((err) => {\n        console.error(err);\n        ctx.dispatch(new Toppings.Error(err));\n        return of(ctx.getState().toppings);\n      })\n    );\n  }\n\n  @Action(Toppings.Success)\n  fetchToppingsSuccess(\n    ctx: StateContext,\n    action: Toppings.Success\n  ) {\n    ctx.patchState({\n      toppings: [...action.toppings],\n    });\n  }\n\n  @Action(Toppings.Error)\n  fetchToppingsError(\n    ctx: StateContext,\n    action: Toppings.Error\n  ) {\n    ctx.patchState({\n      error: action.error.message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SaladStateModel.html":{"url":"interfaces/SaladStateModel.html","title":"interface - SaladStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SaladStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chosenToppings\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            toppings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chosenToppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chosenToppings:         Topping[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Topping[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toppings:         Topping[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Topping[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Topping } from '../../models/topping.model';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { ChooseTopping, FetchToppings, Toppings } from './salad.action';\nimport { SaladService } from '../../providers/salad.service';\nimport { catchError, of, tap } from 'rxjs';\n\nexport interface SaladStateModel {\n  toppings: Topping[];\n  chosenToppings: Topping[];\n  error: string | null;\n}\n\n@State({\n  name: 'salad',\n  defaults: {\n    toppings: [],\n    chosenToppings: [],\n    error: null,\n  },\n})\n@Injectable()\nexport class SaladState {\n  constructor(private saladService: SaladService) {}\n\n  @Selector()\n  static getTotalPrice(state: SaladStateModel) {\n    return state.chosenToppings.reduce((total, topping) => {\n      return (total + topping.price);\n    }, 0);\n  }\n\n  @Action(ChooseTopping)\n  chooseTopping(ctx: StateContext, action: ChooseTopping) {\n    const state = ctx.getState();\n    ctx.patchState({\n      chosenToppings: [...state.chosenToppings, action.topping],\n    });\n  }\n\n  @Action(FetchToppings)\n  fetchToppings(ctx: StateContext) {\n    return this.saladService.getToppings().pipe(\n      tap((toppings) => {\n        ctx.patchState({\n          toppings,\n        });\n      })\n    );\n  }\n\n  @Action(Toppings.Fetch)\n  fetchToppings2(ctx: StateContext) {\n    return this.saladService.getToppings().pipe(\n      tap((toppings) => {\n        ctx.dispatch(new Toppings.Success(toppings));\n      }),\n      catchError((err) => {\n        console.error(err);\n        ctx.dispatch(new Toppings.Error(err));\n        return of(ctx.getState().toppings);\n      })\n    );\n  }\n\n  @Action(Toppings.Success)\n  fetchToppingsSuccess(\n    ctx: StateContext,\n    action: Toppings.Success\n  ) {\n    ctx.patchState({\n      toppings: [...action.toppings],\n    });\n  }\n\n  @Action(Toppings.Error)\n  fetchToppingsError(\n    ctx: StateContext,\n    action: Toppings.Error\n  ) {\n    ctx.patchState({\n      error: action.error.message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaladStore.html":{"url":"classes/SaladStore.html","title":"class - SaladStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaladStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/store.utils.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Store\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectOrderSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectOrderSnapshot\n                        \n                    \n                \n            \n            \n                \nselectOrderSnapshot(callback: (state: literal type) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utils/store.utils.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Store } from \"@ngxs/store\";\nimport { OrderStateModel } from \"../store/order.state\";\n\nexport class SaladStore extends Store {\n    selectOrderSnapshot(callback: (state: { order: OrderStateModel}) => any) {\n        return super.selectSnapshot(callback)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetName.html":{"url":"classes/SetName.html","title":"class - SetName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/order.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/order.action.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/store/order.action.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Order] Set Name'\n                    \n                \n                    \n                        \n                                Defined in src/app/store/order.action.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status } from \"../models/status.enum\"\n\nexport class SetName {\n    static readonly type = '[Order] Set Name'\n\n    constructor(public name: string) {}\n}\n\nexport class SetTel {\n    static readonly type = '[Order] Set Tel'\n\n    constructor(public tel: string) {}\n}\n\nexport class SetStatus {\n    static readonly type = '[Order] Set Status'\n\n    constructor(public status: Status) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStatus.html":{"url":"classes/SetStatus.html","title":"class - SetStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/order.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: Status)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/order.action.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        Status\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/app/store/order.action.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Order] Set Status'\n                    \n                \n                    \n                        \n                                Defined in src/app/store/order.action.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status } from \"../models/status.enum\"\n\nexport class SetName {\n    static readonly type = '[Order] Set Name'\n\n    constructor(public name: string) {}\n}\n\nexport class SetTel {\n    static readonly type = '[Order] Set Tel'\n\n    constructor(public tel: string) {}\n}\n\nexport class SetStatus {\n    static readonly type = '[Order] Set Status'\n\n    constructor(public status: Status) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTel.html":{"url":"classes/SetTel.html","title":"class - SetTel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/order.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tel\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tel: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/order.action.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/store/order.action.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Order] Set Tel'\n                    \n                \n                    \n                        \n                                Defined in src/app/store/order.action.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status } from \"../models/status.enum\"\n\nexport class SetName {\n    static readonly type = '[Order] Set Name'\n\n    constructor(public name: string) {}\n}\n\nexport class SetTel {\n    static readonly type = '[Order] Set Tel'\n\n    constructor(public tel: string) {}\n}\n\nexport class SetStatus {\n    static readonly type = '[Order] Set Status'\n\n    constructor(public status: Status) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Success.html":{"url":"classes/Success.html","title":"class - Success","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Success\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/salad/store/salad.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toppings\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toppings: Topping[])\n                    \n                \n                        \n                            \n                                Defined in src/app/salad/store/salad.action.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toppings\n                                                  \n                                                        \n                                                                        Topping[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toppings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Topping[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${ACTION_SCOPE} Fetch Toppings Success`\n                    \n                \n                    \n                        \n                                Defined in src/app/salad/store/salad.action.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Topping } from '../../models/topping.model';\n\nconst ACTION_SCOPE = '[Salad]';\n\nexport class FetchToppings {\n  static readonly type = `${ACTION_SCOPE} Fetch Toppings`;\n}\n\nexport class ChooseTopping {\n  static readonly type = `${ACTION_SCOPE} Choose Topping`;\n\n  constructor(public topping: Topping) {}\n}\n\nexport namespace Toppings {\n  export class Fetch {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Init`;\n  }\n  export class Success {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Success`;\n    constructor(public toppings: Topping[]) {}\n  }\n  export class Error {\n    static readonly type = `${ACTION_SCOPE} Fetch Toppings Error`;\n    constructor(public error: HttpErrorResponse) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Topping.html":{"url":"interfaces/Topping.html","title":"interface - Topping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Topping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/topping.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Topping {\n  id: number;\n  name: string;\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToppingsComponent.html":{"url":"components/ToppingsComponent.html","title":"component - ToppingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToppingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/salad/toppings/toppings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toppings\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatSelectionList\n                            NgFor\n                            MatListOption\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toppings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toppings.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chooseTopping\n                            \n                            \n                                logChangeDetection\n                            \n                            \n                                trackToppings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toppings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectTopping\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toppings\n                    \n                \n                \n                    \n                        Type :         Topping[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/salad/toppings/toppings.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectTopping\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/salad/toppings/toppings.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chooseTopping\n                        \n                    \n                \n            \n            \n                \nchooseTopping(event: MatSelectionListChange)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/salad/toppings/toppings.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSelectionListChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logChangeDetection\n                        \n                    \n                \n            \n            \n                \nlogChangeDetection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/salad/toppings/toppings.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackToppings\n                        \n                    \n                \n            \n            \n                \ntrackToppings(_index: number, item: Topping)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/salad/toppings/toppings.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            Topping\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatSelectionListChange, MatSelectionList, MatListOption } from '@angular/material/list';\nimport { Topping } from '../../models/topping.model';\nimport { NgFor, NgIf } from '@angular/common';\n\n@Component({\n    selector: 'app-toppings',\n    templateUrl: './toppings.component.html',\n    styleUrl: './toppings.component.css',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [MatSelectionList, NgFor, MatListOption, NgIf]\n})\nexport class ToppingsComponent {\n  @Input()\n  toppings: Topping[] = [];\n\n  @Output()\n  selectTopping = new EventEmitter();\n\n  chooseTopping(event: MatSelectionListChange) {\n    const selectedTopping = event.source.selectedOptions.selected[0].value\n\n    this.selectTopping.emit(selectedTopping);\n  }\n\n  trackToppings(_index: number, item: Topping) {\n    return item.id;\n  }\n\n  logChangeDetection() {\n    console.log('ToppingsComponent rendered');\n    return true;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ topping.name }} ({{ topping.price }} €)\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ topping.name }} ({{ topping.price }} €)  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'KitchenComponent', 'selector': 'app-kitchen'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'SaladComponent', 'selector': 'app-salad'},{'name': 'ToppingsComponent', 'selector': 'app-toppings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToppingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/salad.guard.ts\n            \n            variable\n            saladGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/toppings.resolver.ts\n            \n            variable\n            toppingsResolver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/kitchen/kitchen.component.ts\n            \n            component\n            KitchenComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/topping.model.ts\n            \n            interface\n            Topping\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/order/order.component.ts\n            \n            component\n            OrderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/providers/salad.service.ts\n            \n            injectable\n            SaladService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/salad/salad.component.ts\n            \n            component\n            SaladComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.action.ts\n            \n            class\n            ChooseTopping\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.action.ts\n            \n            class\n            Error\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.action.ts\n            \n            class\n            Fetch\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.action.ts\n            \n            class\n            FetchToppings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.action.ts\n            \n            class\n            Success\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/salad/store/salad.action.ts\n            \n            variable\n            ACTION_SCOPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.state.ts\n            \n            injectable\n            SaladState\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/salad/store/salad.state.ts\n            \n            interface\n            SaladStateModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/salad/toppings/toppings.component.ts\n            \n            component\n            ToppingsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/order.action.ts\n            \n            class\n            SetName\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/order.action.ts\n            \n            class\n            SetStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/order.action.ts\n            \n            class\n            SetTel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/order.state.ts\n            \n            injectable\n            OrderState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/order.state.ts\n            \n            interface\n            OrderStateModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/utils/store.utils.ts\n            \n            class\n            SaladStore\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.8\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.8\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @ngxs/devtools-plugin : 18.1.1\n        \n            @ngxs/router-plugin : 18.1.1\n        \n            @ngxs/store : ^18.1.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 New\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n                        \n                            \n                                 Preparing\n                            \n                        \n                        \n                            \n                                Value : preparing\n                            \n                        \n                        \n                            \n                                 ReadyForPickup\n                            \n                        \n                        \n                            \n                                Value : ready-for-pickup\n                            \n                        \n                        \n                            \n                                 Complete\n                            \n                        \n                        \n                            \n                                Value : complete\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSaladBar\nThis project was generated with Angular CLI version 18.2.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTION_SCOPE   (src/.../salad.action.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            saladGuard   (src/.../salad.guard.ts)\n                        \n                        \n                            toppingsResolver   (src/.../toppings.resolver.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/salad/store/salad.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACTION_SCOPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Salad]'\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimationsAsync(),\n    provideHttpClient(),\n    provideRouter(routes),\n    provideStore([OrderState, SaladState], withNgxsReduxDevtoolsPlugin(), withNgxsRouterPlugin()),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/salad.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        saladGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const router = inject(Router);\n  const store = inject(Store)\n\n  const order = store.snapshot().order as OrderStateModel\n\n  if(order.name && order.tel) {\n    return true;\n  } else {\n    router.navigate(['/'])\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/toppings.resolver.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toppingsResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResolveFn>\n\n                    \n                \n                \n                    \n                        Default value : (\n  route,\n  state\n) => {\n  const saladService = inject(SaladService);\n  return saladService.getToppings();\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
